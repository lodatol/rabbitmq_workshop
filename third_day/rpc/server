#!/usr/bin/env python
import pika
import sys
import subprocess as sub

conn_param= pika.ConnectionParameters(
    host = 'localhost',
    credentials = pika.credentials.PlainCredentials('guest','guest'))

connection = pika.BlockingConnection(conn_param)

channel = connection.channel()

channel.queue_declare(queue='system_command',durable=True)


def on_request(ch, method, props, body):
    print("command received")
    p = sub.Popen(body,stdout=sub.PIPE,stderr=sub.PIPE, shell=True)
    output, errors = p.communicate()
    

    ch.basic_publish(exchange='',
                     routing_key=props.reply_to,
                     properties=pika.BasicProperties(correlation_id = props.correlation_id),
                     body=str(output))
    ch.basic_ack(delivery_tag = method.delivery_tag)

channel.basic_qos(prefetch_count=1)
channel.basic_consume(on_request, queue='system_command')

print(" [x] Awaiting RPC requests")
channel.start_consuming()
